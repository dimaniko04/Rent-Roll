/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './pages/__root'
import { Route as AuthRouteRouteImport } from './pages/_auth/route'
import { Route as IndexRouteImport } from './pages/index'
import { Route as RentalsIndexRouteImport } from './pages/rentals/index'
import { Route as DashboardGamesRouteImport } from './pages/_dashboard/games'
import { Route as AuthRegisterRouteImport } from './pages/_auth/register'
import { Route as AuthLoginRouteImport } from './pages/_auth/login'
import { Route as DashboardGamesIndexRouteImport } from './pages/_dashboard/games.index'
import { Route as DashboardGamesGameIdRouteImport } from './pages/_dashboard/games.$gameId'

const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RentalsIndexRoute = RentalsIndexRouteImport.update({
  id: '/rentals/',
  path: '/rentals/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardGamesRoute = DashboardGamesRouteImport.update({
  id: '/_dashboard/games',
  path: '/games',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)
const DashboardGamesIndexRoute = DashboardGamesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardGamesRoute,
} as any)
const DashboardGamesGameIdRoute = DashboardGamesGameIdRouteImport.update({
  id: '/$gameId',
  path: '/$gameId',
  getParentRoute: () => DashboardGamesRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/games': typeof DashboardGamesRouteWithChildren
  '/rentals': typeof RentalsIndexRoute
  '/games/$gameId': typeof DashboardGamesGameIdRoute
  '/games/': typeof DashboardGamesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/rentals': typeof RentalsIndexRoute
  '/games/$gameId': typeof DashboardGamesGameIdRoute
  '/games': typeof DashboardGamesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/_dashboard/games': typeof DashboardGamesRouteWithChildren
  '/rentals/': typeof RentalsIndexRoute
  '/_dashboard/games/$gameId': typeof DashboardGamesGameIdRoute
  '/_dashboard/games/': typeof DashboardGamesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/register'
    | '/games'
    | '/rentals'
    | '/games/$gameId'
    | '/games/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/register' | '/rentals' | '/games/$gameId' | '/games'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_auth/login'
    | '/_auth/register'
    | '/_dashboard/games'
    | '/rentals/'
    | '/_dashboard/games/$gameId'
    | '/_dashboard/games/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  DashboardGamesRoute: typeof DashboardGamesRouteWithChildren
  RentalsIndexRoute: typeof RentalsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/rentals/': {
      id: '/rentals/'
      path: '/rentals'
      fullPath: '/rentals'
      preLoaderRoute: typeof RentalsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/games': {
      id: '/_dashboard/games'
      path: '/games'
      fullPath: '/games'
      preLoaderRoute: typeof DashboardGamesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_dashboard/games/': {
      id: '/_dashboard/games/'
      path: '/'
      fullPath: '/games/'
      preLoaderRoute: typeof DashboardGamesIndexRouteImport
      parentRoute: typeof DashboardGamesRoute
    }
    '/_dashboard/games/$gameId': {
      id: '/_dashboard/games/$gameId'
      path: '/$gameId'
      fullPath: '/games/$gameId'
      preLoaderRoute: typeof DashboardGamesGameIdRouteImport
      parentRoute: typeof DashboardGamesRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface DashboardGamesRouteChildren {
  DashboardGamesGameIdRoute: typeof DashboardGamesGameIdRoute
  DashboardGamesIndexRoute: typeof DashboardGamesIndexRoute
}

const DashboardGamesRouteChildren: DashboardGamesRouteChildren = {
  DashboardGamesGameIdRoute: DashboardGamesGameIdRoute,
  DashboardGamesIndexRoute: DashboardGamesIndexRoute,
}

const DashboardGamesRouteWithChildren = DashboardGamesRoute._addFileChildren(
  DashboardGamesRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  DashboardGamesRoute: DashboardGamesRouteWithChildren,
  RentalsIndexRoute: RentalsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
