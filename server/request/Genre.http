@userEmail = joedoe@gmail.com
@userPassword = Password123
@adminEmail = dmytro.nikora@nure.ua
@adminPassword = Password_123

### Login test user (valid credentials)
# @name loginUser
POST {{host}}/api/authentication/login
Accept: application/json
Content-Type: application/json

{
    "email": "{{userEmail}}",
    "password": "{{userPassword}}"
}

### Login admin user
# @name loginAdmin
POST {{host}}/api/authentication/login
Content-Type: application/json

{
  "email": "{{adminEmail}}",
  "password": "{{adminPassword}}"
}

### Set token variables
@userToken = {{loginUser.response.body.accessToken}}
@adminToken = {{loginAdmin.response.body.accessToken}}

### Create genre (as admin, valid)
# @name createGenre
POST {{host}}/api/genres
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
    "name": "Strategy"
}

### Set genre id variable
@GenreId = {{createGenre.response.body.id}}

### Create genre (as user, forbidden)
POST {{host}}/api/genres
Authorization: Bearer {{userToken}}
Content-Type: application/json

{
    "name": "Sedan"
}

### Create genre (missing name, validation error)
POST {{host}}/api/genres
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
}

### Create genre (unauthorized, invalid token)
POST {{host}}/api/genres
Authorization: Bearer invalidtoken
Content-Type: application/json

{
    "name": "Coupe"
}

### Get all genres
GET {{host}}/api/genres?search=
Authorization: Bearer {{userToken}}

### Get genre by valid id
# @name getGenre
GET {{host}}/api/genres/{{GenreId}}
Authorization: Bearer {{userToken}}

### Get genre by invalid id (not found)
GET {{host}}/api/genres/2f277e8e-4ec5-49cd-b22d-2421f97dfb71
Authorization: Bearer {{userToken}}

### Update genre (as admin, valid)
PUT {{host}}/api/genres/{{GenreId}}
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
    "name": "Family"
}

### Update genre (as user, forbidden)
PUT {{host}}/api/genres/{{GenreId}}
Authorization: Bearer {{userToken}}
Content-Type: application/json

{
    "name": "User Update Attempt"
}

### Update genre (invalid id)
PUT {{host}}/api/genres/2f277e8e-4ec5-49cd-b22d-2421f97dfb71
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
    "name": "Nonexistent"
}

### Delete genre (as admin, valid)
DELETE {{host}}/api/genres/{{GenreId}}
Authorization: Bearer {{adminToken}}

### Delete genre (as user, forbidden)
DELETE {{host}}/api/genres/{{GenreId}}
Authorization: Bearer {{userToken}}